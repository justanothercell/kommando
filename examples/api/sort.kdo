use std::*;
use std::vec::Vec;
use std::slice::Slice;

fn main() {
    std::error::init_handler();

    let names = Vec::<c_str>::new();
    // names from https://github.com/fosspointer
    names.push("Marilyn Peck");
    names.push("Yousef Beasley");
    names.push("Jaylah Ayers");
    names.push("Ulises Alexander");
    names.push("Lyla Coffey");
    names.push("Kody Howell");
    names.push("Mckenna Rivas");
    names.push("Damon Robinson");
    names.push("Nora Reeves");
    names.push("Clark Rose");
    names.push("Magnolia Guzman");
    names.push("Jude Case");
    names.push("Cleo Wise");

    names.slice().sort();

    let i = 0usize;
    while i < names.length {
        c_api::printf("%02ld. %s\n", i+1, names.get(i).unwrap());
        i += 1;
    };

    c_api::printf("\n");

    let sentence = "the quick brown fox jumps over the lazy dog";
    c_api::printf("%s\n", sentence);
    // sentence is readonly since it is a literal - we need to convert it to an owned instance
    // convert c_str -> Slice<char> -> Vec<char>
    let sentence = Slice::<_>::from_c_str(sentence).to_vec();
    // do sort
    sentence.slice().sort();
    c_api::printf("%s\n", sentence.as_str());
}